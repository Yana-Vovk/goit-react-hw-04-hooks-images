{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.Module.css","components/Modal/Modal.Module.css","components/ImageGallery/ImageGallery.Module.css","components/Button/Button.Module.css","components/Loader/Loader.Module.css","components/Searchbar/Searchbar.Module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","services/FetchImageByAPI.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","reset","className","s","e","preventDefault","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","webformatURL","onToggleModal","largeImageURL","src","alt","ImageGalleryItemImage","onClick","FetchImageByAPI","currentPage","pageSize","axios","get","then","response","data","hits","modalRoot","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","Button","isLoading","LoaderSpinner","color","height","width","loader","ImageGallery","images","setImages","setCurrentPage","setIsLoading","showModal","setShowModal","setLargeImageURL","error","setError","console","log","fetchImg","useLayoutEffect","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","toggleModal","handleModalImage","url","shouldRenderLoadMoreButton","length","map","id","style","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5e192d12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"_2Kpi2vEcvJOOEAXOyRMGTc\",\"ImageGalleryItemImage\":\"_2BejwE9Rd3yEdXb2aBycRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"_2nBOynerxnBQcZpCB7FLW-\",\"Modal\":\"_2iAtACXDLuQMU_7cCdsFgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"_3qxpcvEbhJA_mVUY19fRPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"cJ6x6a7mVGzdZ1TvOojRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"RdwiQeGY6ItGTUNCtezO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Q9gjx1RHRv8-v6Bmj3Py5\",\"SearchForm\":\"_31Y9Jq9n0whv_krAKNZjZR\",\"SearchFormButton\":\"_3H7Owfo8GRxFPLkZsRZmCG\",\"SearchFormButtonLabel\":\"_2sTXJ1DM4T_yHgB6tB0kkP\",\"SearchFormInput\":\"_3mECDT_f_jsjqutog-Yk_g\"};","import React, { useState } from 'react';\r\nimport s from './Searchbar.Module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setQuery(e.currentTarget.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(query);\r\n        reset();\r\n    }\r\n  \r\n    const reset = () => {\r\n        setQuery('');\r\n    }\r\n\r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchFormInput}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n}","import React from 'react';\r\nimport s from './ImageGalleryItem.Module.css';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, onToggleModal, largeImageURL }) => {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img src={webformatURL} alt=\"\" className={s.ImageGalleryItemImage}\r\n       onClick={() => onToggleModal(largeImageURL)}/>\r\n    </li>\r\n  );\r\n}\r\n \r\nexport default ImageGalleryItem;\r\n","import axios from 'axios';\r\n\r\nconst KEY = '21320653-fe4a570a23bb891fd74acd9f9';\r\n\r\nconst FetchImageByAPI = ({ query = '', currentPage = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${ pageSize}`,\r\n  )\r\n      \r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default FetchImageByAPI; ","import React, {useEffect} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.Module.css';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({children, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    \r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n  \r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          {children}\r\n          <img src=\"\" alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot);\r\n}   ","import React from 'react';\r\nimport s from './Button.Module.css';\r\n\r\nconst Button = ({ onClick, isLoading }) => (\r\n  <button type=\"button\"\r\n    className={s.Button}\r\n    onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n \r\nexport default Button;","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from './Loader.Module.css';\r\n\r\nexport default function LoaderSpinner () {\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={100}\r\n        width={100}\r\n        className={s.loader}\r\n      />\r\n    );\r\n}  ","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport FetchImageByAPI from '../../services/FetchImageByAPI';\r\nimport s from './ImageGallery.Module.css';\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button';\r\nimport LoaderSpinner from '../Loader/Loader';\r\n\r\nexport default function ImageGallery({ query } ) {\r\n  \r\n  const [images, setImages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n  useEffect(() => {\r\n    if (query === '') {\r\n      console.log('true prevState !== query');\r\n      setCurrentPage(1);\r\n      setImages([]);\r\n      setError(null);\r\n    } else {\r\n      console.log('false prevState !== query');\r\n      fetchImg();\r\n    }\r\n  }, \r\n  // eslint-disable-next-line\r\n  [query]);\r\n  \r\n  \r\n  useLayoutEffect((prevState) => {\r\n    if (prevState !== currentPage) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [currentPage]);\r\n\r\n const fetchImg = () => {\r\n    setIsLoading(true);\r\n\r\n   FetchImageByAPI({ query, currentPage })\r\n      .then(query => {\r\n        setImages(prevState => [...prevState, ...query]);\r\n        setCurrentPage(prevState => prevState + 1);\r\n      })\r\n      .catch(() => setError(error))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n   const toggleModal = () => {\r\n     setShowModal(!showModal);\r\n  }\r\n\r\n  const handleModalImage = url => {\r\n    toggleModal();\r\n    setLargeImageURL(url);\r\n  }\r\n  \r\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n\r\n    return (\r\n      <div>\r\n        {error && <h1>Try again</h1>}\r\n        <ul className={s.ImageGallery}>\r\n          {images.map(({ id, webformatURL, largeImageURL }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              webformatURL={webformatURL}\r\n              onToggleModal={handleModalImage}\r\n              largeImageURL={largeImageURL} />\r\n          ))}\r\n        </ul>\r\n\r\n        {isLoading && (\r\n           <LoaderSpinner/>\r\n        )}\r\n\r\n        {shouldRenderLoadMoreButton && (\r\n          <Button onClick={fetchImg}/>          \r\n        )}\r\n\r\n        {showModal && (\r\n          <Modal onClose={toggleModal}>\r\n            <img src={largeImageURL} alt=\"\" style={{ width: 900 }} />\r\n          </Modal>\r\n        )}\r\n\r\n      </div>\r\n    );\r\n} \r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\n\n\nexport default function App () {\n  const [query, setQuery] = useState('');\n\n  const inputSubmitHandler = query => {\n    setQuery(query);\n  };\n\n    return (\n      <div>\n        <Searchbar onSubmit={inputSubmitHandler} />\n        <ImageGallery query={query} />\n      </div>\n    )\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}